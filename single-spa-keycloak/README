Functional : objective of the POC ( 3 days )

1. a microfront end application having 3 pages 
--> a login page 
--> a home page ( a protected page) 
    --> log out from home page ----------------------------------- TODO
--> a my account page ( a protected page )
--> a registration page ( a non protected page )
--> an error page ----------------------------------- TODO

2. a BFF layer using graphql and rest based APIs 

--> a protected API 
--> a non protected API 
--> a shielded API ----------------------------------- TODO


Step 1 
we will be using keycloak for the login 

Step 2 
we will be using Microsoft AD as well  ----------------------------------- TODO 

Step 3 
we will try to validate the SSO in jboss ----------------------------------- TODO

Architecture : objective of the POCs 

Use hashed urls in the application ---------------- Done 
Use a shared micro front end ----------------------------------- Descoped 
Check root config can access this shared microfront end ----------------------------------- Descoped 



Landing page urls  ( modified )

http://localhost:9000/#/login

--> /#/login 
--> /app/home
--> /app/my-account
--> /register 

login-app ( done )
home-app ( done )
myaccount-app ( done )
registration-app ( done )


ports

root-config ( 9000 )
login-app ( 8500 )
home-app ( 8600 )
myaccount-app ( 8700 )
registration-app ( 8800 )

Setup commands 

npm install ( run separately )

execute start-everyone.bat to run all mfes 


create realm 
create client 
add user 




Do business login ----------------------------------- done 
Do token refresh ----------------------------------- done 

user accesses the root-config MFE -- done 

root-config authenticates the user with keycloak and redirect back to the root-config after authentication -- done 

access token and refresh token are kept in the global scope and will have a validity of 5 mins -- done 

root-config upon checking the authentication will do a business login -- done 

after the business login then navigate the user to home mfe -- done 

user takes some microfrontend -- done 

user makes an API call from the microfront end to back end and sends the access_token to it -- done 

Handling the access_token expiry -- done   

    > before making any api calls we should check the access_token and should renew it

    bff will convert the access_token to the business_token to make api calls from there -- In progress 

before refresh 
eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ3OEZhVnV1RWozRXRLRHVOZ3NmN1VWNEJtMjRxcnhSRTFycjdvdndIYXpJIn0.eyJleHAiOjE2Njg1OTgyNzAsImlhdCI6MTY2ODU5Nzk3MCwiYXV0aF90aW1lIjoxNjY4NTk0MDk0LCJqdGkiOiI4NGZhZDc5OC0yZDUyLTRmNzQtODcyMi05ZjE4OTljYzkxMTMiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvcmVhbG1zL01pY3JvZnJvbnRlbmQtcG9jLXJlYWxtIiwiYXVkIjpbIm1pY3JvZnJvbnRlbmQtYmZmLWNsaWVudCIsImFjY291bnQiXSwic3ViIjoiODJjZjc3NzUtY2ZmOC00MGExLWFhOWEtYWY3YmE1ZWNkNDE1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWljcm9mcm9udGVuZC1wb2MtY2xpZW50Iiwibm9uY2UiOiI4MTJmMzZmMS0wNTE5LTQ4ZTktODIzYS1hYjhmMjVkYWZmMTQiLCJzZXNzaW9uX3N0YXRlIjoiOGM5OTVmNWItY2YxNi00M2Y3LTlhM2EtMDAwM2U1ZWRjNDEwIiwiYWNyIjoiMCIsImFsbG93ZWQtb3JpZ2lucyI6WyJodHRwOi8vbG9jYWxob3N0OjkwMDAiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImFwcC1hcGktYWNjZXNzIiwib2ZmbGluZV9hY2Nlc3MiLCJkZWZhdWx0LXJvbGVzLW1pY3JvZnJvbnRlbmQtcG9jLXJlYWxtIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJtaWNyb2Zyb250ZW5kLXBvYy1jbGllbnQiOnsicm9sZXMiOlsiYXBpLWFjY2VzcyJdfSwibWljcm9mcm9udGVuZC1iZmYtY2xpZW50Ijp7InJvbGVzIjpbImFwcC11c2VyLWJmZiJdfSwiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJvcGVuaWQgZW1haWwgcHJvZmlsZSIsInNpZCI6IjhjOTk1ZjViLWNmMTYtNDNmNy05YTNhLTAwMDNlNWVkYzQxMCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTUZFIEN1c3RvbWVyIDEiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJtZmUtcG9jLXVzZXItMUB0ZXN0LmNvbSIsImdpdmVuX25hbWUiOiJNRkUiLCJmYW1pbHlfbmFtZSI6IkN1c3RvbWVyIDEiLCJlbWFpbCI6Im1mZS1wb2MtdXNlci0xQHRlc3QuY29tIn0.VNvEACx_oImlGV6EF7CEn7eMXkl8ETUq96mES_Oq8I1XE1MjCpEhAnbS57_7xRpGANYzWMwtpa-F1zd0zVdt4w_yWYr398g6CtqT-k1LFifrL2nsQb3Je6zy6_Uo2x2ByannCjoGAYUELq9V912cXaAHcMyeUS2FEtN6Wr3u9C7SXNLJYwmPFOJ4DhEHP0NFHbygz24uMHXOf1yRf9hwfxm51kjlJ2QSzWpvL8iiXe1fmrQH46SDTGwkzK1hJyAcJyJIli3VholkN_YVxp68KCVlmRXpboZh2A7dKjGWNrGbhtxThvdpMXLf2o7prybryFFjT5523-GRWhr8AX0BKw

after refresh 
eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ3OEZhVnV1RWozRXRLRHVOZ3NmN1VWNEJtMjRxcnhSRTFycjdvdndIYXpJIn0.eyJleHAiOjE2Njg1OTg4MTYsImlhdCI6MTY2ODU5ODUxNiwiYXV0aF90aW1lIjoxNjY4NTk0MDk0LCJqdGkiOiI0YmRkYmYyMS0zODYxLTRiMTgtODFhYy0wNGI5OTZkN2M4YTYiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvcmVhbG1zL01pY3JvZnJvbnRlbmQtcG9jLXJlYWxtIiwiYXVkIjpbIm1pY3JvZnJvbnRlbmQtYmZmLWNsaWVudCIsImFjY291bnQiXSwic3ViIjoiODJjZjc3NzUtY2ZmOC00MGExLWFhOWEtYWY3YmE1ZWNkNDE1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWljcm9mcm9udGVuZC1wb2MtY2xpZW50Iiwibm9uY2UiOiI4MTJmMzZmMS0wNTE5LTQ4ZTktODIzYS1hYjhmMjVkYWZmMTQiLCJzZXNzaW9uX3N0YXRlIjoiOGM5OTVmNWItY2YxNi00M2Y3LTlhM2EtMDAwM2U1ZWRjNDEwIiwiYWNyIjoiMCIsImFsbG93ZWQtb3JpZ2lucyI6WyJodHRwOi8vbG9jYWxob3N0OjkwMDAiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImFwcC1hcGktYWNjZXNzIiwib2ZmbGluZV9hY2Nlc3MiLCJkZWZhdWx0LXJvbGVzLW1pY3JvZnJvbnRlbmQtcG9jLXJlYWxtIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJtaWNyb2Zyb250ZW5kLXBvYy1jbGllbnQiOnsicm9sZXMiOlsiYXBpLWFjY2VzcyJdfSwibWljcm9mcm9udGVuZC1iZmYtY2xpZW50Ijp7InJvbGVzIjpbImFwcC11c2VyLWJmZiJdfSwiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJvcGVuaWQgZW1haWwgcHJvZmlsZSIsInNpZCI6IjhjOTk1ZjViLWNmMTYtNDNmNy05YTNhLTAwMDNlNWVkYzQxMCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiTUZFIEN1c3RvbWVyIDEiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJtZmUtcG9jLXVzZXItMUB0ZXN0LmNvbSIsImdpdmVuX25hbWUiOiJNRkUiLCJmYW1pbHlfbmFtZSI6IkN1c3RvbWVyIDEiLCJlbWFpbCI6Im1mZS1wb2MtdXNlci0xQHRlc3QuY29tIn0.GcZvOFOXIJvPqqXC_eCec__JeOUMMKuGgCY-5LCFSsyfTcsZM1vMSsuLJhg1LHcPNjWVJlAwzgsvHuwrp-U3saoIIQB2tPMlopL4aMqNcpuYYcm9v1e-nelFL0jwXuji0UkUQeLx9aasJadj5v9ck6J6ij3AqvITAAGcdFceMokXBPmISvsdpSs2NRQBek3kmTihJXiGpr8eEJiteemXD6vOOO1q6TgpO3FQFI-BztLtFoTZ18aqIchABYlY_7fKNcvDfrnrtqnwaYpILvQI1S9QOuEE6bQxLMj5-8kasBvMnHO0zr76oOPctMP6ncRh7uylLIKZ8PspSHVH4w9DjQ

